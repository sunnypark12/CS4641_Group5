(base) bagseonhos-mbp:CS4641_Group5 sunho$ python RandomForestTraining.py
Classification Report:
               precision    recall  f1-score   support

           0       0.85      0.82      0.83        77
           1       0.87      0.90      0.88       107

    accuracy                           0.86       184
   macro avg       0.86      0.86      0.86       184
weighted avg       0.86      0.86      0.86       184

Precision: 0.87
Recall: 0.90
F1 Score: 0.88

Feature Importances:
     importance
0     0.336171
2     0.091382
1     0.085731
6     0.071789
8     0.061683
5     0.059644
9     0.054536
10    0.053100
7     0.052434
3     0.046847
4     0.045340
11    0.041342
Random Forest model training and evaluation completed successfully.



(base) bagseonhos-mbp:CS4641_Group5 sunho$ python KNNTraining.py
Classification Report:
               precision    recall  f1-score   support

           0       0.78      0.86      0.81        77
           1       0.89      0.82      0.85       107

    accuracy                           0.84       184
   macro avg       0.83      0.84      0.83       184
weighted avg       0.84      0.84      0.84       184

Precision: 0.89
Recall: 0.82
F1 Score: 0.85
KNN model training and evaluation completed successfully.



Torch NN model

(base) bagseonhos-mbp:CS4641_Group5 sunho$ python TorchNN.py
Epoch 1/50, Loss: 0.4340
Epoch 2/50, Loss: 0.3882
Epoch 3/50, Loss: 0.7513
Epoch 4/50, Loss: 0.3634
Epoch 5/50, Loss: 0.1360
Epoch 6/50, Loss: 0.0353
Epoch 7/50, Loss: 0.1666
Epoch 8/50, Loss: 0.0392
Epoch 9/50, Loss: 0.0295
Epoch 10/50, Loss: 0.8816
Epoch 11/50, Loss: 0.6308
Epoch 12/50, Loss: 0.0191
Epoch 13/50, Loss: 0.2893
Epoch 14/50, Loss: 0.1396
Epoch 15/50, Loss: 0.2841
Epoch 16/50, Loss: 0.1804
Epoch 17/50, Loss: 0.2737
Epoch 18/50, Loss: 0.1713
Epoch 19/50, Loss: 1.0242
Epoch 20/50, Loss: 0.0688
Epoch 21/50, Loss: 0.0554
Epoch 22/50, Loss: 0.0461
Epoch 23/50, Loss: 0.0206
Epoch 24/50, Loss: 0.0545
Epoch 25/50, Loss: 0.2849
Epoch 26/50, Loss: 0.3006
Epoch 27/50, Loss: 0.3272
Epoch 28/50, Loss: 0.0720
Epoch 29/50, Loss: 0.4480
Epoch 30/50, Loss: 0.0109
Epoch 31/50, Loss: 0.5046
Epoch 32/50, Loss: 0.2447
Epoch 33/50, Loss: 0.1317
Epoch 34/50, Loss: 0.0710
Epoch 35/50, Loss: 0.0022
Epoch 36/50, Loss: 0.0509
Epoch 37/50, Loss: 0.0234
Epoch 38/50, Loss: 0.0210
Epoch 39/50, Loss: 0.0376
Epoch 40/50, Loss: 0.0493
Epoch 41/50, Loss: 0.0233
Epoch 42/50, Loss: 0.2367
Epoch 43/50, Loss: 0.0677
Epoch 44/50, Loss: 0.0355
Epoch 45/50, Loss: 0.0004
Epoch 46/50, Loss: 0.0136
Epoch 47/50, Loss: 0.0657
Epoch 48/50, Loss: 0.0235
Epoch 49/50, Loss: 0.0088
Epoch 50/50, Loss: 0.2427
Classification Report:
               precision    recall  f1-score   support

           0       0.84      0.86      0.85        77
           1       0.90      0.88      0.89       107

    accuracy                           0.87       184
   macro avg       0.87      0.87      0.87       184
weighted avg       0.87      0.87      0.87       184

Precision: 0.90
Recall: 0.88
F1 Score: 0.89
Neural Network model training and evaluation completed successfully.




TensorFlow NN Model

(base) bagseonhos-mbp:CS4641_Group5 sunho$ python TensorFlowNN.py
/opt/anaconda3/lib/python3.11/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.
  super().__init__(activity_regularizer=activity_regularizer, **kwargs)
Epoch 1/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 1s 4ms/step - accuracy: 0.6726 - loss: 0.6382 - val_accuracy: 0.8367 - val_loss: 0.4855
Epoch 2/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 893us/step - accuracy: 0.8661 - loss: 0.4023 - val_accuracy: 0.8503 - val_loss: 0.3919
Epoch 3/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 839us/step - accuracy: 0.8993 - loss: 0.2784 - val_accuracy: 0.8503 - val_loss: 0.3750
Epoch 4/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 813us/step - accuracy: 0.8945 - loss: 0.2707 - val_accuracy: 0.8367 - val_loss: 0.3944
Epoch 5/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 876us/step - accuracy: 0.8848 - loss: 0.2834 - val_accuracy: 0.8367 - val_loss: 0.3797
Epoch 6/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 834us/step - accuracy: 0.9094 - loss: 0.2398 - val_accuracy: 0.8503 - val_loss: 0.3725
Epoch 7/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 827us/step - accuracy: 0.8910 - loss: 0.2701 - val_accuracy: 0.8503 - val_loss: 0.3877
Epoch 8/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 808us/step - accuracy: 0.9034 - loss: 0.2465 - val_accuracy: 0.8503 - val_loss: 0.3830
Epoch 9/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 827us/step - accuracy: 0.9031 - loss: 0.2281 - val_accuracy: 0.8435 - val_loss: 0.3949
Epoch 10/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 829us/step - accuracy: 0.9053 - loss: 0.2378 - val_accuracy: 0.8503 - val_loss: 0.3993
Epoch 11/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 850us/step - accuracy: 0.9006 - loss: 0.2548 - val_accuracy: 0.8367 - val_loss: 0.4169
Epoch 12/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 837us/step - accuracy: 0.9264 - loss: 0.1856 - val_accuracy: 0.8231 - val_loss: 0.4257
Epoch 13/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 868us/step - accuracy: 0.9315 - loss: 0.1956 - val_accuracy: 0.8299 - val_loss: 0.4307
Epoch 14/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 877us/step - accuracy: 0.9377 - loss: 0.1802 - val_accuracy: 0.8367 - val_loss: 0.4567
Epoch 15/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 2ms/step - accuracy: 0.9361 - loss: 0.1600 - val_accuracy: 0.8231 - val_loss: 0.4639
Epoch 16/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 814us/step - accuracy: 0.9087 - loss: 0.2028 - val_accuracy: 0.8299 - val_loss: 0.4852
Epoch 17/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 831us/step - accuracy: 0.9392 - loss: 0.1585 - val_accuracy: 0.8231 - val_loss: 0.5123
Epoch 18/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 870us/step - accuracy: 0.9481 - loss: 0.1481 - val_accuracy: 0.8163 - val_loss: 0.5145
Epoch 19/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 835us/step - accuracy: 0.9343 - loss: 0.1722 - val_accuracy: 0.8299 - val_loss: 0.4971
Epoch 20/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 840us/step - accuracy: 0.9431 - loss: 0.1596 - val_accuracy: 0.8163 - val_loss: 0.5408
Epoch 21/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 826us/step - accuracy: 0.9514 - loss: 0.1400 - val_accuracy: 0.8163 - val_loss: 0.5290
Epoch 22/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 836us/step - accuracy: 0.9662 - loss: 0.1269 - val_accuracy: 0.8163 - val_loss: 0.5740
Epoch 23/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 809us/step - accuracy: 0.9545 - loss: 0.1253 - val_accuracy: 0.8163 - val_loss: 0.5845
Epoch 24/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 819us/step - accuracy: 0.9601 - loss: 0.1247 - val_accuracy: 0.8163 - val_loss: 0.5819
Epoch 25/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 826us/step - accuracy: 0.9610 - loss: 0.1224 - val_accuracy: 0.8163 - val_loss: 0.5651
Epoch 26/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 840us/step - accuracy: 0.9646 - loss: 0.1263 - val_accuracy: 0.8095 - val_loss: 0.6745
Epoch 27/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 840us/step - accuracy: 0.9582 - loss: 0.1079 - val_accuracy: 0.8163 - val_loss: 0.6118
Epoch 28/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 827us/step - accuracy: 0.9667 - loss: 0.1169 - val_accuracy: 0.8163 - val_loss: 0.6160
Epoch 29/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 850us/step - accuracy: 0.9723 - loss: 0.0936 - val_accuracy: 0.8299 - val_loss: 0.6398
Epoch 30/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 852us/step - accuracy: 0.9738 - loss: 0.0979 - val_accuracy: 0.8163 - val_loss: 0.6882
Epoch 31/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 838us/step - accuracy: 0.9742 - loss: 0.0909 - val_accuracy: 0.8231 - val_loss: 0.6485
Epoch 32/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 821us/step - accuracy: 0.9822 - loss: 0.0985 - val_accuracy: 0.8095 - val_loss: 0.6895
Epoch 33/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 812us/step - accuracy: 0.9783 - loss: 0.0812 - val_accuracy: 0.8095 - val_loss: 0.7070
Epoch 34/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 823us/step - accuracy: 0.9860 - loss: 0.0849 - val_accuracy: 0.8095 - val_loss: 0.7188
Epoch 35/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 820us/step - accuracy: 0.9763 - loss: 0.0899 - val_accuracy: 0.8027 - val_loss: 0.7129
Epoch 36/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 839us/step - accuracy: 0.9707 - loss: 0.0985 - val_accuracy: 0.8231 - val_loss: 0.7552
Epoch 37/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 844us/step - accuracy: 0.9780 - loss: 0.0802 - val_accuracy: 0.8163 - val_loss: 0.7156
Epoch 38/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 827us/step - accuracy: 0.9776 - loss: 0.0848 - val_accuracy: 0.8095 - val_loss: 0.8000
Epoch 39/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 850us/step - accuracy: 0.9812 - loss: 0.0761 - val_accuracy: 0.8163 - val_loss: 0.7950
Epoch 40/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 842us/step - accuracy: 0.9884 - loss: 0.0646 - val_accuracy: 0.8095 - val_loss: 0.8081
Epoch 41/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 828us/step - accuracy: 0.9878 - loss: 0.0607 - val_accuracy: 0.8163 - val_loss: 0.8069
Epoch 42/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 826us/step - accuracy: 0.9890 - loss: 0.0621 - val_accuracy: 0.8095 - val_loss: 0.8724
Epoch 43/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 822us/step - accuracy: 0.9895 - loss: 0.0496 - val_accuracy: 0.8027 - val_loss: 0.8516
Epoch 44/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 823us/step - accuracy: 0.9867 - loss: 0.0562 - val_accuracy: 0.8027 - val_loss: 0.9170
Epoch 45/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 835us/step - accuracy: 0.9877 - loss: 0.0513 - val_accuracy: 0.7959 - val_loss: 0.8702
Epoch 46/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 828us/step - accuracy: 0.9880 - loss: 0.0564 - val_accuracy: 0.8027 - val_loss: 0.9222
Epoch 47/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 821us/step - accuracy: 0.9894 - loss: 0.0483 - val_accuracy: 0.8027 - val_loss: 0.9427
Epoch 48/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 843us/step - accuracy: 0.9928 - loss: 0.0424 - val_accuracy: 0.8095 - val_loss: 0.9576
Epoch 49/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 833us/step - accuracy: 0.9902 - loss: 0.0398 - val_accuracy: 0.7959 - val_loss: 0.9629
Epoch 50/50
59/59 ━━━━━━━━━━━━━━━━━━━━ 0s 836us/step - accuracy: 0.9861 - loss: 0.0436 - val_accuracy: 0.8027 - val_loss: 0.9830
6/6 ━━━━━━━━━━━━━━━━━━━━ 0s 4ms/step 
Classification Report:
               precision    recall  f1-score   support

           0       0.78      0.87      0.82        77
           1       0.90      0.82      0.86       107

    accuracy                           0.84       184
   macro avg       0.84      0.85      0.84       184
weighted avg       0.85      0.84      0.84       184

Precision: 0.90
Recall: 0.82
F1 Score: 0.86
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
Neural Network model training and evaluation completed successfully.